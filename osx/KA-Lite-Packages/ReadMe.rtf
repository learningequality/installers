{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww15240\viewh13560\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 \ul \ulc0 KA-Lite OSX App
\b0 \ulnone \
\
This folder contains the script and sources to build the installer for KA-Lite.\
The application icon sits on the status menu of OS X and uses [PyRun](http://www.egenix.com/products/python/PyRun/) instead of the OS X built-in Python.
\b \ul \
\
System Requirements\
\

\b0 \ulnone * Mac OSX 10.10 Yosemite\
* git\
* Xcode 6.1.x\
\

\b \ul Steps to build the installer\
\

\b0 \ulnone 1. To build automatically, run `setup.sh` which will:  \
    1.1. Create a `temp` directory (this is ignored in the .gitignore) and puts everything else inside it.  \
    1.2. Download PyRun to the `temp/pyrun-2.7` directory.  \
    1.3. Download the KA-Lite source to the `temp/ka-lite` directory.  \
    1.4. Copy the `pyrun-2.7` directory to the `<xcode_source>/Resources/` folder.  \
    1.5. Build the `KA-Lite Monitor.app` using `xcodebuild`.  \
    1.6. Build the `KA-Lite Monitor.dmg` package.  The output can be found at the `temp/output/KA-Lite Monitor.dmg`.  \
2. To build the .dmg manually - refer to the README-FOR-DMG.md document.  \
\

\b \ul Manually build and test the application using Xcode\
\

\b0 \ulnone 1. Run `setup.sh` so it will download the `ka-lite` repository and `pyrun`.\
2. Launch Xcode\
3. Navigate to `Project Navigator` and click the `Project Name`\
4. Navigate to `Build Settings` tab and change the `Code Signing Identity` to `Don't Code Sign`.\
4. Build the project to produce the .app.\
\
\
}